@function gen-src-font-face($map-src) {
  $src: '';

  $locals: map-get($map-src, 'local');
  $urls: map-get($map-src, 'url');

  $path: map-get($urls, 'path');
  $types: map-get($urls, 'types');
  $length: length($types);

  @each $local in $locals {
    $src: $src + 'local("#{$local}"), ';
  }

  @each $type in $types {
    $i: index($types, $type);
    @if ($i < $length) {
      $src: $src + 'url("#{$path}.#{$type}") format("#{$type}"), ';
    } @else {
      $src: $src + 'url("#{$path}.#{$type}") format("#{$type}")';
    }
  }

  @return $src;
}

@mixin font-faces() {
  @each $name, $font in $fonts {
    $family: map-get($font, 'family');
    $variations: map-get($font, 'variations');

    @each $style, $map-weights in $variations {
      @each $weight, $map-src in $map-weights {
        $src: gen-src-font-face($map-src);
        @font-face {
          font-family: #{$family};
          font-style: $style;
          font-weight: $weight;
          src: #{$src};
        }
      }
    }
  }
}

@mixin scope($hosted: 'root') {
  @if ($hosted != 'root' and $hosted != 'host') {
    @error 'O "#{$hosted}" escopo nÃ£o existe!';
  }
  @if ($hosted == 'root') {
    :#{$hosted} .mnv {
      @include vars-modular-scale();
      @include vars-vertical-rhythm();
      @include vars-color();
      &.mnv-ac-font {
        --ac-font: 'Open Dyslexic';
      }
      font-size: var(--ms-0);
      @include font($init: true);

      @include schemas-root();
      @include hight-contrast-root();
    }
  } @else {
    :#{$hosted} {
      @include vars-modular-scale();
      @include vars-vertical-rhythm();
      @include vars-color();
      font-size: var(--ms-0);
      @include font($init: true);
    }
    :host([ac-font]) {
      --ac-font: 'Open Dyslexic';
    }
    @include schemas-host();
    @include hight-contrast-host();
  }
}
