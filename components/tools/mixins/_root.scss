@mixin root() {
  :root {
    @for $i from $modular-scale-init to $modular-scale-size {
      @include ms-respond('--ms-#{$i}', $i);
    }

    @for $i from $vertical-rhythm-init to $vertical-rhythm-size {
      --vr-#{$i}: #{($i + 1) * $vertical-rhythm-base}rem;
    }

    font-size: var(--ms-0);

    @each $name, $content in $colors {
      @if (
        map-has-key($content, 'schema') and map-get($content, 'schema') == true
      ) {
        @debug $name;
      } @else {
        $variations: map-remove($content, 'schema');
        @each $key, $map-values in $variations {
          $hex: map-get($map-values, 'hex');
          $op: map-get($map-values, 'op');

          @each $name-op, $value-op in $op {
            --color-#{$name}-#{$name-op}: #{rgba($hex, $value-op)};
          }
        }
      }
    }

    // @include colorsBg($root: true);

    body {
      //  @include colorsBg($inherit: true);
    }
  }
}
